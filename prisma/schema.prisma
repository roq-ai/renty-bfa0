generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model application {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  status      String    @db.VarChar(255)
  user_id     String?   @db.Uuid
  property_id String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  property    property? @relation(fields: [property_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model property {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String        @db.VarChar(255)
  image       String?       @db.VarChar(255)
  location    String        @db.VarChar(255)
  price       Int
  bedrooms    Int
  amenities   String?       @db.VarChar(255)
  user_id     String?       @db.Uuid
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  application application[]
  user        user?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  review      review[]
}

model review {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  rating      Int
  comment     String?   @db.VarChar(255)
  user_id     String?   @db.Uuid
  property_id String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  property    property? @relation(fields: [property_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model startup {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  application application[]
  property    property[]
  review      review[]
  startup     startup[]
}
